use super::id::IdError;

pub fn char_to_byte(c: char) -> anyhow::Result<u8, IdError> {
    match c {
        '0' => Ok(0),
        '1' => Ok(1),
        '2' => Ok(2),
        '3' => Ok(3),
        '4' => Ok(4),
        '5' => Ok(5),
        '6' => Ok(6),
        '7' => Ok(7),
        '8' => Ok(8),
        '9' => Ok(9),

        'A' => Ok(10),
        'B' => Ok(11),
        'C' => Ok(12),
        'D' => Ok(13),
        'E' => Ok(14),
        'F' => Ok(15),
        'G' => Ok(16),
        'H' => Ok(17),
        'I' => Ok(18),
        'J' => Ok(19),
        'K' => Ok(20),
        'L' => Ok(21),
        'M' => Ok(22),
        'N' => Ok(23),
        'O' => Ok(24),
        'P' => Ok(25),
        'Q' => Ok(26),
        'R' => Ok(27),
        'S' => Ok(28),
        'T' => Ok(29),
        'U' => Ok(30),
        'V' => Ok(31),
        'W' => Ok(32),
        'X' => Ok(33),
        'Y' => Ok(34),
        'Z' => Ok(35),

        'a' => Ok(36),
        'b' => Ok(37),
        'c' => Ok(38),
        'd' => Ok(39),
        'e' => Ok(40),
        'f' => Ok(41),
        'g' => Ok(42),
        'h' => Ok(43),
        'i' => Ok(44),
        'j' => Ok(45),
        'k' => Ok(46),
        'l' => Ok(47),
        'm' => Ok(48),
        'n' => Ok(49),
        'o' => Ok(50),
        'p' => Ok(51),
        'q' => Ok(52),
        'r' => Ok(53),
        's' => Ok(54),
        't' => Ok(55),
        'u' => Ok(56),
        'v' => Ok(57),
        'w' => Ok(58),
        'x' => Ok(59),
        'y' => Ok(60),
        'z' => Ok(61),

        '+' => Ok(62),
        '-' => Ok(63),

        _ => Err(IdError::UnknownLiteralChar(c)),
    }
}

pub fn byte_to_char(b: u8) -> anyhow::Result<char, IdError> {
    match b {
        0 => Ok('0'),
        1 => Ok('1'),
        2 => Ok('2'),
        3 => Ok('3'),
        4 => Ok('4'),
        5 => Ok('5'),
        6 => Ok('6'),
        7 => Ok('7'),
        8 => Ok('8'),
        9 => Ok('9'),

        10 => Ok('A'),
        11 => Ok('B'),
        12 => Ok('C'),
        13 => Ok('D'),
        14 => Ok('E'),
        15 => Ok('F'),
        16 => Ok('G'),
        17 => Ok('H'),
        18 => Ok('I'),
        19 => Ok('J'),
        20 => Ok('K'),
        21 => Ok('L'),
        22 => Ok('M'),
        23 => Ok('N'),
        24 => Ok('O'),
        25 => Ok('P'),
        26 => Ok('Q'),
        27 => Ok('R'),
        28 => Ok('S'),
        29 => Ok('T'),
        30 => Ok('U'),
        31 => Ok('V'),
        32 => Ok('W'),
        33 => Ok('X'),
        34 => Ok('Y'),
        35 => Ok('Z'),

        36 => Ok('a'),
        37 => Ok('b'),
        38 => Ok('c'),
        39 => Ok('d'),
        40 => Ok('e'),
        41 => Ok('f'),
        42 => Ok('g'),
        43 => Ok('h'),
        44 => Ok('i'),
        45 => Ok('j'),
        46 => Ok('k'),
        47 => Ok('l'),
        48 => Ok('m'),
        49 => Ok('n'),
        50 => Ok('o'),
        51 => Ok('p'),
        52 => Ok('q'),
        53 => Ok('r'),
        54 => Ok('s'),
        55 => Ok('t'),
        56 => Ok('u'),
        57 => Ok('v'),
        58 => Ok('w'),
        59 => Ok('x'),
        60 => Ok('y'),
        61 => Ok('z'),

        62 => Ok('+'),
        63 => Ok('-'),

        _ => Err(IdError::CharByteValueIsOutOfRange(b)),
    }
}
